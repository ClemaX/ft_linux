# vim: filetype=sh
# shellcheck shell=bash
# shellcheck disable=SC2034

# TODO: Depends on unifont, efibootmgr-18, freetype-2.13.0

name="grub"
version="2.06"

source_base="$name-$version"

sources=(
	"/sources/$source_base.tar.xz"
	"/sources/$source_base-upstream_fixes-1.patch"
	"grub-mkconfig.hook"
)
md5sums=(
	'cf0fd928b1e5479c8108ee52cb114363'
	'da388905710bb4cbfbc7bd7346ff9174'
)

prepare()
{
	pushd "$SRCDIR" || return
		pushd "$source_base" || return
			# Fix an issue causing grub-install to fail when the boot partition
			# is created by e2fsprogs-1.47.0 or later.
			patch -Np1 -i "$SRCDIR/$source_base-upstream_fixes-1.patch"
		popd || return
	popd || return
}

# TODO: Support 32-bit build.
build()
{
	# Unset any environment variables which may affecty the build.
	unset {C,CPP,CXX,LD}FLAGS

	pushd "$SRCDIR/$source_base" || return
		./configure --prefix=/usr \
			--sysconfdir=/etc \
			--disable-efiemu \
			--enable-grub-mkfont \
			--with-platform=efi \
			--target=x86_64 \
			--disable-werror

		unset TARGET_CC

		make

		make DESTDIR="$DESTDIR" install

		# Move bash completion to correct location.
		install -vd "$DESTDIR/usr/share/bash-completion/completions"
		mv -v "$DESTDIR/etc/bash_completion.d/grub" \
			"$DESTDIR/usr/share/bash-completion/completions"
	popd || return

	pushd "$SRCDIR" || return
		install -vD -m644 grub-mkconfig.hook \
			-t "$DESTDIR/usr/share/pkg/hooks/linux"
	popd || return
}

post_install()
{
	local lfs_version="${LFS_VERSION:-11.3}"

	local kernel_version=6.1.11
	local kernel_localversion="${LFS_LOCALVERSION:--chamada}"

	local kernel_image_name="vmlinuz-$version$kernel_localversion"

	local esp_dir=/boot

	local dev_boot_id
	local dev_root_partuuid

	dev_boot_id="PARTUUID=$(findmnt "$esp_dir" -no PARTUUID)"
	dev_root_partuuid=$(findmnt / -no PARTUUID)
	dev_root_name=$(basename "$(findmnt / -no SOURCE)")

	# Add boot device to fstab.
	echo "$dev_boot_id $esp_dir vfat defaults 0 1" >> /etc/fstab

	# TODO: Handle efivars

	# Ensure efivars are mounted.
	#mountpoint /sys/firmware/efi/efivars \
	#|| mount -v -t efivarfs efivarfs /sys/firmware/efi/efivars

	# Add efivars to fstab.
	#echo "efivarfs /sys/firmware/efi/efivars efivarfs defaults 0 0" >> /etc/fstab

	# Create EFI directory.
	install -vd "$esp_dir/EFI"

	# Install grub for removable device.
	grub-install --efi-directory="$esp_dir" --target=x86_64-efi --removable

	if ! [ -e "/dev/disk/by-partuuid/$dev_root_partuuid" ]
	then
		# Create by-partuuid link if it does not exist.
		mkdir -vp /dev/disk/by-partuuid
		ln -vs "../../$dev_root_name" "/dev/disk/by-partuuid/$dev_root_partuuid"
	fi

	cat > /etc/default/grub << EOF
GRUB_DISTRIBUTOR=LFS
GRUB_DISABLE_LINUX_PARTUUID=false
EOF
}
